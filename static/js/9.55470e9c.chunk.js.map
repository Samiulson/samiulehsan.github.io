{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","views/pages/authentication/login/RestLogin.js","views/pages/authentication/login/index.js"],"names":["AuthWrapper1","styled","_ref","theme","backgroundColor","palette","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","classes","_jsx","MainCard","className","contentClass","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","_jsxs","Stack","direction","justifyContent","Typography","variant","component","Link","href","target","underline","redButton","fontSize","fontWeight","grey","border","borderColor","color","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","RestLogin","props","others","dispatcher","useDispatch","scriptedRef","checked","setChecked","React","useState","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","Fragment","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","axios","post","configData","API_SERVER","then","response","data","success","console","log","type","ACCOUNT_INITIALIZE","payload","isLoggedIn","user","token","msg","catch","error","err","message","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","FormControl","fullWidth","Boolean","InputLabel","htmlFor","OutlinedInput","id","value","name","onBlur","onChange","label","inputProps","notchedOutline","FormHelperText","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","Visibility","VisibilityOff","alignItems","FormControlLabel","control","Checkbox","to","login","sx","textDecoration","Box","mt","AnimateButton","Button","disableElevation","disabled","size","Login","useTheme","matchDownSM","useMediaQuery","Grid","container","item","xs","m","sm","mb","RouterLink","Logo","secondary","main","gutterBottom","textAlign","Divider"],"mappings":"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","file":"static/js/9.55470e9c.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@material-ui/styles';\n\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\n\n// project import\nimport MainCard from './../../../ui-component/cards/MainCard';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: '475px',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5) + ' !important',\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3) + ' !important'\n        }\n    }\n}));\n\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\n\nconst AuthCardWrapper = ({ children, ...other }) => {\n    const classes = useStyles();\n\n    return (\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\n            {children}\n        </MainCard>\n    );\n};\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import { useEffect, useRef } from 'react';\n\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import React from 'react';\n\n// material-ui\nimport { Link, Typography, Stack } from '@material-ui/core';\n\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\n\nconst AuthFooter = () => {\n    return (\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n                berrydashboard.io\n            </Typography>\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n                &copy; codedthemes.com\n            </Typography>\n        </Stack>\n    );\n};\n\nexport default AuthFooter;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport configData from '../../../../config';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    Stack,\n    Typography\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport axios from 'axios';\n\n// project imports\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport AnimateButton from '../../../../ui-component/extended/AnimateButton';\nimport { ACCOUNT_INITIALIZE } from './../../../../store/actions';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//============================|| API JWT - LOGIN ||============================//\n\nconst RestLogin = (props, { ...others }) => {\n    const classes = useStyles();\n    const dispatcher = useDispatch();\n\n    const scriptedRef = useScriptRef();\n    const [checked, setChecked] = React.useState(true);\n\n    const [showPassword, setShowPassword] = React.useState(false);\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{\n                    email: '',\n                    password: '',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={(values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        axios\n                            .post( configData.API_SERVER + 'users/login', {\n                                password: values.password,\n                                email: values.email\n                            })\n                            .then(function (response) {\n                                if (response.data.success) {\n                                    console.log(response.data);\n                                    dispatcher({\n                                        type: ACCOUNT_INITIALIZE,\n                                        payload: { isLoggedIn: true, user: response.data.user, token: response.data.token }\n                                    });\n                                    if (scriptedRef.current) {\n                                        setStatus({ success: true });\n                                        setSubmitting(false);\n                                    }\n                                } else {\n                                    setStatus({ success: false });\n                                    setErrors({ submit: response.data.msg });\n                                    setSubmitting(false);\n                                }\n                            })\n                            .catch(function (error) {\n                                setStatus({ success: false });\n                                setErrors({ submit: error.response.data.msg });\n                                setSubmitting(false);\n                            });\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-login\">Email</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-login\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                label=\"Email Address\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-login\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-login\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                label=\"Password\"\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n                        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" spacing={1}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={checked}\n                                        onChange={(event) => setChecked(event.target.checked)}\n                                        name=\"checked\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Remember me\"\n                            />\n                            <Typography\n                                variant=\"subtitle1\"\n                                component={Link}\n                                to={props.login ? '/pages/forgot-password/forgot-password' + props.login : '#'}\n                                color=\"secondary\"\n                                sx={{ textDecoration: 'none' }}\n                            >\n                                Forgot Password?\n                            </Typography>\n                        </Stack>\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box\n                            sx={{\n                                mt: 2\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign IN\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default RestLogin;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './../AuthWrapper1';\nimport Logo from './../../../../ui-component/Logo';\nimport AuthCardWrapper from './../AuthCardWrapper';\nimport RestLogin from './RestLogin';\nimport AuthFooter from './../../../../ui-component/cards/AuthFooter';\n\n// assets\n\n//================================|| LOGIN MAIN ||================================//\n\nconst Login = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Hi, Welcome Back\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <RestLogin />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/register\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Don't have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Login;\n"],"sourceRoot":""}