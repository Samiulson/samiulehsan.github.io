{"version":3,"sources":["views/pages/authentication/AuthWrapper1.js","views/pages/authentication/AuthCardWrapper.js","hooks/useScriptRef.js","ui-component/cards/AuthFooter.js","utils/password-strength.js","assets/images/icons/social-google.svg","views/pages/authentication/firebase-forms/FirebaseRegister.js","views/pages/authentication/authentication3/Register3.js"],"names":["AuthWrapper1","styled","_ref","theme","backgroundColor","palette","primary","light","minHeight","useStyles","makeStyles","card","maxWidth","flexGrow","flexBasis","breakpoints","down","margin","content","padding","spacing","AuthCardWrapper","children","other","classes","_jsx","MainCard","className","contentClass","useScriptRef","scripted","useRef","useEffect","current","AuthFooter","_jsxs","Stack","direction","justifyContent","Typography","variant","component","Link","href","target","underline","strengthColor","count","label","color","value","errorMain","warningDark","orangeMain","successMain","successDark","strengthIndicator","strengths","length","RegExp","test","hasNumber","hasSpecial","hasMixed","redButton","fontSize","fontWeight","grey","border","borderColor","textTransform","signDivider","signText","cursor","loginIcon","marginRight","loginInput","typography","customInput","FirebaseRegister","others","scriptedRef","matchDownSM","useMediaQuery","customization","useSelector","state","showPassword","setShowPassword","React","useState","checked","setChecked","strength","setStrength","level","setLevel","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","changePassword","temp","Fragment","Grid","container","item","xs","AnimateButton","Button","disableElevation","fullWidth","onClick","async","console","error","size","src","Google","alt","width","sx","mr","sm","Box","alignItems","display","Divider","orientation","borderRadius","disableRipple","disabled","mb","Formik","initialValues","email","password","submit","validationSchema","Yup","shape","max","required","onSubmit","values","_ref2","setErrors","setStatus","setSubmitting","success","err","message","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","name","type","defaultValue","FormControl","Boolean","InputLabel","htmlFor","OutlinedInput","id","onBlur","onChange","inputProps","notchedOutline","FormHelperText","e","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","edge","Visibility","VisibilityOff","height","FormControlLabel","control","Checkbox","to","mt","Register","useTheme","m","RouterLink","Logo","secondary","main","gutterBottom","textAlign","textDecoration"],"mappings":"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","file":"static/js/6.449cc2b9.chunk.js","sourcesContent":["// material-ui\nimport { styled } from '@material-ui/styles';\n\n//-----------------------|| AUTHENTICATION 1 WRAPPER ||-----------------------//\n\nconst AuthWrapper1 = styled('div')(({ theme }) => ({\n    backgroundColor: theme.palette.primary.light,\n    minHeight: '100vh'\n}));\n\nexport default AuthWrapper1;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\n\n// project import\nimport MainCard from './../../../ui-component/cards/MainCard';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        maxWidth: '475px',\n        '& > *': {\n            flexGrow: 1,\n            flexBasis: '50%'\n        },\n        [theme.breakpoints.down('sm')]: {\n            margin: '20px'\n        },\n        [theme.breakpoints.down('lg')]: {\n            maxWidth: '400px'\n        }\n    },\n    content: {\n        padding: theme.spacing(5) + ' !important',\n        [theme.breakpoints.down('lg')]: {\n            padding: theme.spacing(3) + ' !important'\n        }\n    }\n}));\n\n//-----------------------|| AUTHENTICATION CARD WRAPPER ||-----------------------//\n\nconst AuthCardWrapper = ({ children, ...other }) => {\n    const classes = useStyles();\n\n    return (\n        <MainCard className={classes.card} contentClass={classes.content} {...other}>\n            {children}\n        </MainCard>\n    );\n};\n\nAuthCardWrapper.propTypes = {\n    children: PropTypes.node\n};\n\nexport default AuthCardWrapper;\n","import { useEffect, useRef } from 'react';\n\n//-----------------------|| ELEMENT REFERENCE HOOKS  ||-----------------------//\n\nconst useScriptRef = () => {\n    const scripted = useRef(true);\n\n    useEffect(\n        () => () => {\n            scripted.current = false;\n        },\n        []\n    );\n\n    return scripted;\n};\n\nexport default useScriptRef;\n","import React from 'react';\n\n// material-ui\nimport { Link, Typography, Stack } from '@material-ui/core';\n\n//-----------------------|| FOOTER - AUTHENTICATION 2 & 3 ||-----------------------//\n\nconst AuthFooter = () => {\n    return (\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://berrydashboard.io\" target=\"_blank\" underline=\"hover\">\n                berrydashboard.io\n            </Typography>\n            <Typography variant=\"subtitle2\" component={Link} href=\"https://codedthemes.com\" target=\"_blank\" underline=\"hover\">\n                &copy; codedthemes.com\n            </Typography>\n        </Stack>\n    );\n};\n\nexport default AuthFooter;\n","/**\n * Password validator for login pages\n */\n\nimport value from '../assets/scss/_themes-vars.module.scss';\n\n// has number\nconst hasNumber = (value) => {\n    return new RegExp(/[0-9]/).test(value);\n};\n\n// has mix of small and capitals\nconst hasMixed = (value) => {\n    return new RegExp(/[a-z]/).test(value) && new RegExp(/[A-Z]/).test(value);\n};\n\n// has special chars\nconst hasSpecial = (value) => {\n    return new RegExp(/[!#@$%^&*)(+=._-]/).test(value);\n};\n\n// set color based on password strength\nexport const strengthColor = (count) => {\n    if (count < 2) return { label: 'Poor', color: value.errorMain };\n    if (count < 3) return { label: 'Weak', color: value.warningDark };\n    if (count < 4) return { label: 'Normal', color: value.orangeMain };\n    if (count < 5) return { label: 'Good', color: value.successMain };\n    if (count < 6) return { label: 'Strong', color: value.successDark };\n};\n\n// password strength indicator\nexport const strengthIndicator = (value) => {\n    let strengths = 0;\n    if (value.length > 5) strengths++;\n    if (value.length > 7) strengths++;\n    if (hasNumber(value)) strengths++;\n    if (hasSpecial(value)) strengths++;\n    if (hasMixed(value)) strengths++;\n    return strengths;\n};\n","export default __webpack_public_path__ + \"static/media/social-google.9887eb8e.svg\";","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport {\n    Box,\n    Button,\n    Checkbox,\n    Divider,\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    IconButton,\n    InputAdornment,\n    InputLabel,\n    OutlinedInput,\n    TextField,\n    Typography,\n    useMediaQuery\n} from '@material-ui/core';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project imports\nimport useScriptRef from '../../../../hooks/useScriptRef';\nimport Google from './../../../../assets/images/icons/social-google.svg';\nimport AnimateButton from './../../../../ui-component/extended/AnimateButton';\nimport { strengthColor, strengthIndicator } from '../../../../utils/password-strength';\n\n// assets\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    redButton: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        backgroundColor: theme.palette.grey[50],\n        border: '1px solid',\n        borderColor: theme.palette.grey[100],\n        color: theme.palette.grey[700],\n        textTransform: 'none',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light\n        },\n        [theme.breakpoints.down('sm')]: {\n            fontSize: '0.875rem'\n        }\n    },\n    signDivider: {\n        flexGrow: 1\n    },\n    signText: {\n        cursor: 'unset',\n        margin: theme.spacing(2),\n        padding: '5px 56px',\n        borderColor: theme.palette.grey[100] + ' !important',\n        color: theme.palette.grey[900] + '!important',\n        fontWeight: 500\n    },\n    loginIcon: {\n        marginRight: '16px',\n        [theme.breakpoints.down('sm')]: {\n            marginRight: '8px'\n        }\n    },\n    loginInput: {\n        ...theme.typography.customInput\n    }\n}));\n\n//===========================|| FIREBASE - REGISTER ||===========================//\n\nconst FirebaseRegister = ({ ...others }) => {\n    const classes = useStyles();\n    const scriptedRef = useScriptRef();\n    const matchDownSM = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n    const customization = useSelector((state) => state.customization);\n    const [showPassword, setShowPassword] = React.useState(false);\n    const [checked, setChecked] = React.useState(true);\n\n    const [strength, setStrength] = React.useState(0);\n    const [level, setLevel] = React.useState('');\n\n    const googleHandler = async () => {\n        console.error('Register');\n    };\n\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n\n    const changePassword = (value) => {\n        const temp = strengthIndicator(value);\n        setStrength(temp);\n        setLevel(strengthColor(temp));\n    };\n\n    useEffect(() => {\n        changePassword('123456');\n    }, []);\n\n    return (\n        <React.Fragment>\n            <Grid container direction=\"column\" justifyContent=\"center\" spacing={2}>\n                <Grid item xs={12}>\n                    <AnimateButton>\n                        <Button\n                            disableElevation\n                            fullWidth={true}\n                            className={classes.redButton}\n                            onClick={googleHandler}\n                            size=\"large\"\n                            variant=\"contained\"\n                        >\n                            <img src={Google} alt=\"google\" width=\"20px\" sx={{ mr: { xs: 1, sm: 2 } }} className={classes.loginIcon} /> Sign\n                            up with Google\n                        </Button>\n                    </AnimateButton>\n                </Grid>\n                <Grid item xs={12}>\n                    <Box\n                        sx={{\n                            alignItems: 'center',\n                            display: 'flex'\n                        }}\n                    >\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                        <AnimateButton>\n                            <Button\n                                variant=\"outlined\"\n                                className={classes.signText}\n                                sx={{ borderRadius: customization.borderRadius + 'px' }}\n                                disableRipple\n                                disabled\n                            >\n                                OR\n                            </Button>\n                        </AnimateButton>\n                        <Divider className={classes.signDivider} orientation=\"horizontal\" />\n                    </Box>\n                </Grid>\n                <Grid item xs={12} container alignItems=\"center\" justifyContent=\"center\">\n                    <Box\n                        sx={{\n                            mb: 2\n                        }}\n                    >\n                        <Typography variant=\"subtitle1\">Sign up with Email address</Typography>\n                    </Box>\n                </Grid>\n            </Grid>\n\n            <Formik\n                initialValues={{\n                    email: 'info@codedthemes.com',\n                    password: '123456',\n                    submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                    email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                    password: Yup.string().max(255).required('Password is required')\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n                    try {\n                        if (scriptedRef.current) {\n                            setStatus({ success: true });\n                            setSubmitting(false);\n                        }\n                    } catch (err) {\n                        console.error(err);\n                        if (scriptedRef.current) {\n                            setStatus({ success: false });\n                            setErrors({ submit: err.message });\n                            setSubmitting(false);\n                        }\n                    }\n                }}\n            >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                    <form noValidate onSubmit={handleSubmit} {...others}>\n                        <Grid container spacing={matchDownSM ? 0 : 2}>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    name=\"fname\"\n                                    type=\"text\"\n                                    defaultValue=\"Joseph\"\n                                    className={classes.loginInput}\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    fullWidth\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    name=\"lname\"\n                                    type=\"text\"\n                                    defaultValue=\"Doe\"\n                                    className={classes.loginInput}\n                                />\n                            </Grid>\n                        </Grid>\n                        <FormControl fullWidth error={Boolean(touched.email && errors.email)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-email-register\">Email Address / Username</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-email-register\"\n                                type=\"email\"\n                                value={values.email}\n                                name=\"email\"\n                                onBlur={handleBlur}\n                                onChange={handleChange}\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.email && errors.email && (\n                                <FormHelperText error id=\"standard-weight-helper-text--register\">\n                                    {' '}\n                                    {errors.email}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        <FormControl fullWidth error={Boolean(touched.password && errors.password)} className={classes.loginInput}>\n                            <InputLabel htmlFor=\"outlined-adornment-password-register\">Password</InputLabel>\n                            <OutlinedInput\n                                id=\"outlined-adornment-password-register\"\n                                type={showPassword ? 'text' : 'password'}\n                                value={values.password}\n                                name=\"password\"\n                                label=\"Password\"\n                                onBlur={handleBlur}\n                                onChange={(e) => {\n                                    handleChange(e);\n                                    changePassword(e.target.value);\n                                }}\n                                endAdornment={\n                                    <InputAdornment position=\"end\">\n                                        <IconButton\n                                            aria-label=\"toggle password visibility\"\n                                            onClick={handleClickShowPassword}\n                                            onMouseDown={handleMouseDownPassword}\n                                            edge=\"end\"\n                                        >\n                                            {showPassword ? <Visibility /> : <VisibilityOff />}\n                                        </IconButton>\n                                    </InputAdornment>\n                                }\n                                inputProps={{\n                                    classes: {\n                                        notchedOutline: classes.notchedOutline\n                                    }\n                                }}\n                            />\n                            {touched.password && errors.password && (\n                                <FormHelperText error id=\"standard-weight-helper-text-password-register\">\n                                    {' '}\n                                    {errors.password}{' '}\n                                </FormHelperText>\n                            )}\n                        </FormControl>\n\n                        {strength !== 0 && (\n                            <FormControl fullWidth>\n                                <Box\n                                    sx={{\n                                        mb: 2\n                                    }}\n                                >\n                                    <Grid container spacing={2} alignItems=\"center\">\n                                        <Grid item>\n                                            <Box\n                                                backgroundColor={level.color}\n                                                sx={{\n                                                    width: 85,\n                                                    height: 8,\n                                                    borderRadius: '7px'\n                                                }}\n                                            ></Box>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle1\" fontSize=\"0.75rem\">\n                                                {level.label}\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Box>\n                            </FormControl>\n                        )}\n\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            checked={checked}\n                                            onChange={(event) => setChecked(event.target.checked)}\n                                            name=\"checked\"\n                                            color=\"primary\"\n                                        />\n                                    }\n                                    label={\n                                        <Typography variant=\"subtitle1\">\n                                            Agree with &nbsp;\n                                            <Typography variant=\"subtitle1\" component={Link} to=\"#\">\n                                                Terms & Condition.\n                                            </Typography>\n                                        </Typography>\n                                    }\n                                />\n                            </Grid>\n                        </Grid>\n                        {errors.submit && (\n                            <Box\n                                sx={{\n                                    mt: 3\n                                }}\n                            >\n                                <FormHelperText error>{errors.submit}</FormHelperText>\n                            </Box>\n                        )}\n\n                        <Box\n                            sx={{\n                                mt: 2\n                            }}\n                        >\n                            <AnimateButton>\n                                <Button\n                                    disableElevation\n                                    disabled={isSubmitting}\n                                    fullWidth\n                                    size=\"large\"\n                                    type=\"submit\"\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                >\n                                    Sign up\n                                </Button>\n                            </AnimateButton>\n                        </Box>\n                    </form>\n                )}\n            </Formik>\n        </React.Fragment>\n    );\n};\n\nexport default FirebaseRegister;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// material-ui\nimport { useTheme } from '@material-ui/core';\nimport { Divider, Grid, Stack, Typography, useMediaQuery } from '@material-ui/core';\n\n// project imports\nimport AuthWrapper1 from './../AuthWrapper1';\nimport AuthCardWrapper from './../AuthCardWrapper';\nimport Logo from './../../../../ui-component/Logo';\nimport FirebaseRegister from './../firebase-forms/FirebaseRegister';\nimport AuthFooter from './../../../../ui-component/cards/AuthFooter';\n\n// assets\n\n//===============================|| AUTH3 - REGISTER ||===============================//\n\nconst Register = () => {\n    const theme = useTheme();\n    const matchDownSM = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <AuthWrapper1>\n            <Grid container direction=\"column\" justifyContent=\"flex-end\" sx={{ minHeight: '100vh' }}>\n                <Grid item xs={12}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ minHeight: 'calc(100vh - 68px)' }}>\n                        <Grid item sx={{ m: { xs: 1, sm: 3 }, mb: 0 }}>\n                            <AuthCardWrapper>\n                                <Grid container spacing={2} alignItems=\"center\" justifyContent=\"center\">\n                                    <Grid item sx={{ mb: 3 }}>\n                                        <RouterLink to=\"#\">\n                                            <Logo />\n                                        </RouterLink>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid\n                                            container\n                                            direction={matchDownSM ? 'column-reverse' : 'row'}\n                                            alignItems=\"center\"\n                                            justifyContent=\"center\"\n                                        >\n                                            <Grid item>\n                                                <Stack alignItems=\"center\" justifyContent=\"center\" spacing={1}>\n                                                    <Typography\n                                                        color={theme.palette.secondary.main}\n                                                        gutterBottom\n                                                        variant={matchDownSM ? 'h3' : 'h2'}\n                                                    >\n                                                        Sign up\n                                                    </Typography>\n                                                    <Typography variant=\"caption\" fontSize=\"16px\" textAlign={matchDownSM ? 'center' : ''}>\n                                                        Enter your credentials to continue\n                                                    </Typography>\n                                                </Stack>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <FirebaseRegister />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Divider />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Grid item container direction=\"column\" alignItems=\"center\" xs={12}>\n                                            <Typography\n                                                component={RouterLink}\n                                                to=\"/pages/login/login3\"\n                                                variant=\"subtitle1\"\n                                                sx={{ textDecoration: 'none' }}\n                                            >\n                                                Have an account?\n                                            </Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </AuthCardWrapper>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n                    <AuthFooter />\n                </Grid>\n            </Grid>\n        </AuthWrapper1>\n    );\n};\n\nexport default Register;\n"],"sourceRoot":""}