{"version":3,"sources":["ui-component/cards/Skeleton/EarningCard.js","assets/images/icons/earning.svg","views/dashboard/Default/EarningCard.js","views/dashboard/Default/chart-data/bajaj-area-chart.js","views/dashboard/Default/BajajAreaChartCard.js","ui-component/cards/Skeleton/PopularCard.js","views/dashboard/Default/PopularCard.js","views/dashboard/Default/chart-data/total-order-month-line-chart.js","views/dashboard/Default/chart-data/total-order-year-line-chart.js","views/dashboard/Default/TotalOrderLineChartCard.js","ui-component/cards/Skeleton/TotalIncomeCard.js","views/dashboard/Default/TotalIncomeDarkCard.js","views/dashboard/Default/TotalIncomeLightCard.js","ui-component/cards/Skeleton/TotalGrowthBarChart.js","views/dashboard/Default/chart-data/total-growth-bar-chart.js","views/dashboard/Default/TotalGrowthBarChart.js","views/dashboard/Default/index.js"],"names":["useStyles","makeStyles","cardHeading","marginRight","marginTop","marginBottom","EarningCard","classes","_jsx","Card","children","CardContent","_jsxs","Grid","container","direction","item","justifyContent","Skeleton","variant","width","height","className","theme","card","backgroundColor","palette","secondary","dark","color","overflow","position","content","background","borderRadius","top","right","breakpoints","down","opacity","padding","avatar","typography","commonAvatar","largeAvatar","avatarRight","mediumAvatar","zIndex","fontSize","fontWeight","subHeading","avatarCircle","cursor","smallAvatar","circleIcon","transform","menuItem","_ref","isLoading","anchorEl","setAnchorEl","React","useState","handleClose","Fragment","SkeletonEarningCard","MainCard","border","contentClass","Avatar","src","EarningIcon","alt","aria-controls","aria-haspopup","onClick","event","currentTarget","MoreHorizIcon","Menu","id","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","GetAppTwoToneIcon","FileCopyTwoToneIcon","PictureAsPdfTwoToneIcon","ArchiveTwoToneIcon","alignItems","Typography","ArrowUpwardIcon","sx","mb","chartData","type","options","chart","sparkline","enabled","dataLabels","stroke","curve","tooltip","fixed","x","show","y","title","formatter","seriesName","marker","series","data","light","contentContainer","paddingBottom","fontStyle","BajajAreaChartCard","useTheme","orangeDark","useEffect","newSupportChart","colors","ApexCharts","exec","xs","grey","Chart","cardAction","display","paddingTop","PopularCard","spacing","gridSpacing","zeroMinWidth","primaryLight","primary","divider","avatarSuccess","success","marginLeft","successDark","avatarError","orange","errorDark","SkeletonPopularCard","alignContent","MoreHorizOutlinedIcon","pt","KeyboardArrowUpOutlinedIcon","Divider","KeyboardArrowDownOutlinedIcon","CardActions","Button","size","disableElevation","ChevronRightOutlinedIcon","fill","yaxis","min","max","name","TotalOrderLineChartCard","timeValue","setTimeValue","handleChangeTime","newValue","SkeletonTotalOrderCard","LocalMallOutlinedIcon","e","ArrowDownwardIcon","ChartDataMonth","ChartDataYear","TotalIncomeCard","List","ListItem","disableGutters","ListItemAvatar","ListItemText","TotalIncomeDarkCard","TableChartOutlinedIcon","mt","warning","TotalIncomeLightCard","StorefrontTwoToneIcon","TotalGrowthBarChart","stacked","toolbar","zoom","responsive","breakpoint","legend","offsetX","offsetY","plotOptions","bar","columnWidth","xaxis","categories","fontFamily","labels","useSeriesColors","markers","radius","itemMargin","grid","status","value","label","setValue","text","grey200","primary200","primaryDark","secondaryMain","main","secondaryLight","grey500","newChartData","style","borderColor","SkeletonTotalGrowthBarChart","TextField","select","onChange","target","map","option","Dashboard","setLoading","lg","md","sm"],"mappings":"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","file":"static/js/15.f5c6c3fe.chunk.js","sourcesContent":["import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    cardHeading: {\n        marginRight: '8px',\n        marginTop: '18px',\n        marginBottom: '14px'\n    }\n});\n\n//-----------------------|| SKELETON EARNING CARD ||-----------------------//\n\nconst EarningCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container direction=\"column\">\n                    <Grid item>\n                        <Grid container justifyContent=\"space-between\">\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={44} height={44} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" width={34} height={34} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" className={classes.cardHeading} height={40} />\n                    </Grid>\n                    <Grid item>\n                        <Skeleton variant=\"rect\" height={30} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default EarningCard;\n","export default __webpack_public_path__ + \"static/media/earning.b019e86a.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonEarningCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\n// assets\nimport EarningIcon from './../../../assets/images/icons/earning.svg';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport GetAppTwoToneIcon from '@material-ui/icons/GetAppOutlined';\nimport FileCopyTwoToneIcon from '@material-ui/icons/FileCopyOutlined';\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfOutlined';\nimport ArchiveTwoToneIcon from '@material-ui/icons/ArchiveOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.secondary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.secondary[800],\n        marginTop: '8px'\n    },\n    avatarRight: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.mediumAvatar,\n        backgroundColor: theme.palette.secondary.dark,\n        color: theme.palette.secondary[200],\n        zIndex: 1\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.secondary[200]\n    },\n    avatarCircle: {\n        cursor: 'pointer',\n        ...theme.typography.smallAvatar,\n        backgroundColor: theme.palette.secondary[200],\n        color: theme.palette.secondary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    },\n    menuItem: {\n        marginRight: '14px',\n        fontSize: '1.25rem'\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - EARNING CARD ||===========================//\n\nconst EarningCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonEarningCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <img src={EarningIcon} alt=\"Notification\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        className={classes.avatarRight}\n                                        aria-controls=\"menu-earning-card\"\n                                        aria-haspopup=\"true\"\n                                        onClick={handleClick}\n                                    >\n                                        <MoreHorizIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                    <Menu\n                                        id=\"menu-earning-card\"\n                                        anchorEl={anchorEl}\n                                        keepMounted\n                                        open={Boolean(anchorEl)}\n                                        onClose={handleClose}\n                                        variant=\"selectedMenu\"\n                                        anchorOrigin={{\n                                            vertical: 'bottom',\n                                            horizontal: 'right'\n                                        }}\n                                        transformOrigin={{\n                                            vertical: 'top',\n                                            horizontal: 'right'\n                                        }}\n                                    >\n                                        <MenuItem onClick={handleClose}>\n                                            <GetAppTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Import Card\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <FileCopyTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Copy Data\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <PictureAsPdfTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Export\n                                        </MenuItem>\n                                        <MenuItem onClick={handleClose}>\n                                            <ArchiveTwoToneIcon fontSize=\"inherit\" className={classes.menuItem} /> Archive File\n                                        </MenuItem>\n                                    </Menu>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item>\n                            <Grid container alignItems=\"center\">\n                                <Grid item>\n                                    <Typography className={classes.cardHeading}>$500.00</Typography>\n                                </Grid>\n                                <Grid item>\n                                    <Avatar className={classes.avatarCircle}>\n                                        <ArrowUpwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                    </Avatar>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 1.25 }}>\n                            <Typography className={classes.subHeading}>Total Earning</Typography>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nEarningCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default EarningCard;\n","//-----------------------|| DASHBOARD - BAJAJ AREA CHART ||-----------------------//\n\nconst chartData = {\n    type: 'area',\n    height: 95,\n    options: {\n        chart: {\n            id: 'support-chart',\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 1\n        },\n        tooltip: {\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Ticket '\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            data: [0, 15, 10, 50, 30, 40, 25]\n        }\n    ]\n};\n\nexport default chartData;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport chartData from './chart-data/bajaj-area-chart';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    content: {\n        padding: '0px !important'\n    },\n    contentContainer: {\n        padding: '16px',\n        paddingBottom: 0,\n        color: '#fff'\n    },\n    fontStyle: {\n        fontWeight: 400\n    }\n}));\n\n//===========================|| DASHBOARD DEFAULT - BAJAJ AREA CHART CARD ||===========================//\n\nconst BajajAreaChartCard = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const orangeDark = theme.palette.secondary[800];\n\n    React.useEffect(() => {\n        const newSupportChart = {\n            ...chartData.options,\n            colors: [orangeDark],\n            tooltip: {\n                theme: 'light'\n            }\n        };\n        ApexCharts.exec(`support-chart`, 'updateOptions', newSupportChart);\n    }, [orangeDark]);\n\n    return (\n        <Card className={classes.card}>\n            <CardContent className={classes.content}>\n                <Grid container className={classes.contentContainer}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                            <Grid item>\n                                <Typography variant=\"subtitle1\" sx={{ color: theme.palette.secondary.dark }}>\n                                    Bajaj Finery\n                                </Typography>\n                            </Grid>\n                            <Grid item>\n                                <Typography variant=\"h4\" sx={{ color: theme.palette.grey[800] }}>\n                                    $1839.00\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"subtitle2\" sx={{ color: theme.palette.grey[800] }}>\n                            10% Profit\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Chart {...chartData} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default BajajAreaChartCard;\n","import React from 'react';\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Skeleton } from '@material-ui/core';\n\n// project imports\nimport { gridSpacing } from './../../../store/constant';\n\n// style constant\nconst useStyles = makeStyles({\n    cardAction: {\n        padding: '10px',\n        display: 'flex',\n        paddingTop: 0,\n        justifyContent: 'center'\n    }\n});\n\n//-----------------------|| SKELETON - POPULAR CARD ||-----------------------//\n\nconst PopularCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={20} width={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={150} />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Grid container spacing={1}>\n                            <Grid item xs={12}>\n                                <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                    <Grid item xs={6}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                        <Grid container alignItems=\"center\" spacing={gridSpacing} justifyContent=\"space-between\">\n                                            <Grid item xs zeroMinWidth>\n                                                <Skeleton variant=\"rect\" height={20} />\n                                            </Grid>\n                                            <Grid item>\n                                                <Skeleton variant=\"rect\" height={16} width={16} />\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Skeleton variant=\"rect\" height={20} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </CardContent>\n            <CardContent className={classes.cardAction}>\n                <Skeleton variant=\"rect\" height={25} width={75} />\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default PopularCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, CardActions, CardContent, Divider, Grid, Menu, MenuItem, Typography } from '@material-ui/core';\n\n// project imports\nimport BajajAreaChartCard from './BajajAreaChartCard';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonPopularCard from './../../../ui-component/cards/Skeleton/PopularCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// assets\nimport ChevronRightOutlinedIcon from '@material-ui/icons/ChevronRightOutlined';\nimport MoreHorizOutlinedIcon from '@material-ui/icons/MoreHorizOutlined';\nimport KeyboardArrowUpOutlinedIcon from '@material-ui/icons/KeyboardArrowUpOutlined';\nimport KeyboardArrowDownOutlinedIcon from '@material-ui/icons/KeyboardArrowDownOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    cardAction: {\n        padding: '10px',\n        paddingTop: 0,\n        justifyContent: 'center'\n    },\n    primaryLight: {\n        color: theme.palette.primary[200],\n        cursor: 'pointer'\n    },\n    divider: {\n        marginTop: '12px',\n        marginBottom: '12px'\n    },\n    avatarSuccess: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.success.light,\n        color: theme.palette.success.dark,\n        marginLeft: '15px'\n    },\n    successDark: {\n        color: theme.palette.success.dark\n    },\n    avatarError: {\n        width: '16px',\n        height: '16px',\n        borderRadius: '5px',\n        backgroundColor: theme.palette.orange.light,\n        color: theme.palette.orange.dark,\n        marginLeft: '15px'\n    },\n    errorDark: {\n        color: theme.palette.orange.dark\n    }\n}));\n\n//-----------------------|| DASHBOARD DEFAULT - POPULAR CARD ||-----------------------//\n\nconst PopularCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonPopularCard />\n            ) : (\n                <MainCard content={false}>\n                    <CardContent>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item xs={12}>\n                                <Grid container alignContent=\"center\" justifyContent=\"space-between\">\n                                    <Grid item>\n                                        <Typography variant=\"h4\">Popular Stocks</Typography>\n                                    </Grid>\n                                    <Grid item>\n                                        <MoreHorizOutlinedIcon\n                                            fontSize=\"small\"\n                                            className={classes.primaryLight}\n                                            aria-controls=\"menu-popular-card\"\n                                            aria-haspopup=\"true\"\n                                            onClick={handleClick}\n                                        />\n                                        <Menu\n                                            id=\"menu-popular-card\"\n                                            anchorEl={anchorEl}\n                                            keepMounted\n                                            open={Boolean(anchorEl)}\n                                            onClose={handleClose}\n                                            variant=\"selectedMenu\"\n                                            anchorOrigin={{\n                                                vertical: 'bottom',\n                                                horizontal: 'right'\n                                            }}\n                                            transformOrigin={{\n                                                vertical: 'top',\n                                                horizontal: 'right'\n                                            }}\n                                        >\n                                            <MenuItem onClick={handleClose}> Today</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Month</MenuItem>\n                                            <MenuItem onClick={handleClose}> This Year </MenuItem>\n                                        </Menu>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item xs={12} sx={{ pt: '16px !important' }}>\n                                <BajajAreaChartCard />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Bajaj Finery\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $1839.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $100.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Reliance\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $200.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarSuccess}>\n                                                            <KeyboardArrowUpOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.successDark}>\n                                            10% Profit\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    TTML\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                                <Divider className={classes.divider} />\n                                <Grid container direction=\"column\">\n                                    <Grid item>\n                                        <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                            <Grid item>\n                                                <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                    Stolon\n                                                </Typography>\n                                            </Grid>\n                                            <Grid item>\n                                                <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                                    <Grid item>\n                                                        <Typography variant=\"subtitle1\" color=\"inherit\">\n                                                            $189.00\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Avatar variant=\"rounded\" className={classes.avatarError}>\n                                                            <KeyboardArrowDownOutlinedIcon fontSize=\"small\" color=\"inherit\" />\n                                                        </Avatar>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n                                        </Grid>\n                                    </Grid>\n                                    <Grid item>\n                                        <Typography variant=\"subtitle2\" className={classes.errorDark}>\n                                            10% loss\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                    <CardActions className={classes.cardAction}>\n                        <Button size=\"small\" disableElevation>\n                            View All\n                            <ChevronRightOutlinedIcon />\n                        </Button>\n                    </CardActions>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nPopularCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default PopularCard;\n","//-----------------------|| DASHBOARD - TOTAL ORDER MONTH CHART ||-----------------------//\n\nconst chartData = {\n    type: 'line',\n    height: 90,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: ['#fff'],\n        fill: {\n            type: 'solid',\n            opacity: 1\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 3\n        },\n        yaxis: {\n            min: 0,\n            max: 100\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Total Order'\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [45, 66, 41, 89, 25, 44, 9, 54]\n        }\n    ]\n};\n\nexport default chartData;\n","//-----------------------|| DASHBOARD - TOTAL ORDER YEAR CHART ||-----------------------//\n\nconst chartData = {\n    type: 'line',\n    height: 90,\n    options: {\n        chart: {\n            sparkline: {\n                enabled: true\n            }\n        },\n        dataLabels: {\n            enabled: false\n        },\n        colors: ['#fff'],\n        fill: {\n            type: 'solid',\n            opacity: 1\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 3\n        },\n        yaxis: {\n            min: 0,\n            max: 100\n        },\n        tooltip: {\n            theme: 'dark',\n            fixed: {\n                enabled: false\n            },\n            x: {\n                show: false\n            },\n            y: {\n                title: {\n                    formatter: (seriesName) => 'Total Order'\n                }\n            },\n            marker: {\n                show: false\n            }\n        }\n    },\n    series: [\n        {\n            name: 'series1',\n            data: [35, 44, 9, 54, 45, 66, 41, 69]\n        }\n    ]\n};\n\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Grid, Typography } from '@material-ui/core';\n\n// third-party\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport SkeletonTotalOrderCard from './../../../ui-component/cards/Skeleton/EarningCard';\n\nimport ChartDataMonth from './chart-data/total-order-month-line-chart';\nimport ChartDataYear from './chart-data/total-order-year-line-chart';\n\n// assets\nimport LocalMallOutlinedIcon from '@material-ui/icons/LocalMallOutlined';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: '#fff',\n        overflow: 'hidden',\n        position: 'relative',\n        '&>div': {\n            position: 'relative',\n            zIndex: 5\n        },\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            zIndex: 1,\n            top: '-85px',\n            right: '-95px',\n            [theme.breakpoints.down('xs')]: {\n                top: '-105px',\n                right: '-140px'\n            }\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            zIndex: 1,\n            width: '210px',\n            height: '210px',\n            background: theme.palette.primary[800],\n            borderRadius: '50%',\n            top: '-125px',\n            right: '-15px',\n            opacity: 0.5,\n            [theme.breakpoints.down('xs')]: {\n                top: '-155px',\n                right: '-70px'\n            }\n        }\n    },\n    content: {\n        padding: '20px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff',\n        marginTop: '8px'\n    },\n    cardHeading: {\n        fontSize: '2.125rem',\n        fontWeight: 500,\n        marginRight: '8px',\n        marginTop: '14px',\n        marginBottom: '6px'\n    },\n    subHeading: {\n        fontSize: '1rem',\n        fontWeight: 500,\n        color: theme.palette.primary[200]\n    },\n    avatarCircle: {\n        ...theme.typography.smallAvatar,\n        cursor: 'pointer',\n        backgroundColor: theme.palette.primary[200],\n        color: theme.palette.primary.dark\n    },\n    circleIcon: {\n        transform: 'rotate3d(1, 1, 1, 45deg)'\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL ORDER LINE CHART CARD ||-----------------------//\n\nconst TotalOrderLineChartCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    const [timeValue, setTimeValue] = React.useState(false);\n    const handleChangeTime = (event, newValue) => {\n        setTimeValue(newValue);\n    };\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalOrderCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <Grid container direction=\"column\">\n                        <Grid item>\n                            <Grid container justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Avatar variant=\"rounded\" className={classes.avatar}>\n                                        <LocalMallOutlinedIcon fontSize=\"inherit\" />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item>\n                                    <Button\n                                        disableElevation\n                                        variant={timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, true)}\n                                    >\n                                        Month\n                                    </Button>\n                                    <Button\n                                        disableElevation\n                                        variant={!timeValue ? 'contained' : 'string'}\n                                        size=\"small\"\n                                        onClick={(e) => handleChangeTime(e, false)}\n                                    >\n                                        Year\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item sx={{ mb: 0.75 }}>\n                            <Grid container alignItems=\"center\">\n                                <Grid item xs={6}>\n                                    <Grid container alignItems=\"center\">\n                                        <Grid item>\n                                            {timeValue ? (\n                                                <Typography className={classes.cardHeading}>$108</Typography>\n                                            ) : (\n                                                <Typography className={classes.cardHeading}>$961</Typography>\n                                            )}\n                                        </Grid>\n                                        <Grid item>\n                                            <Avatar className={classes.avatarCircle}>\n                                                <ArrowDownwardIcon fontSize=\"inherit\" className={classes.circleIcon} />\n                                            </Avatar>\n                                        </Grid>\n                                        <Grid item xs={12}>\n                                            <Typography className={classes.subHeading}>Total Order</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item xs={6}>\n                                    {timeValue ? <Chart {...ChartDataMonth} /> : <Chart {...ChartDataYear} />}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalOrderLineChartCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalOrderLineChartCard;\n","import React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, List, ListItem, ListItemAvatar, ListItemText, Skeleton } from '@material-ui/core';\n\n// style constant\nconst useStyles = makeStyles({\n    content: {\n        padding: '16px !important'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n});\n\n//-----------------------|| SKELETON - TOTAL INCOME DARK/LIGHT Card ||-----------------------//\n\nconst TotalIncomeCard = () => {\n    const classes = useStyles();\n    return (\n        <Card>\n            <CardContent className={classes.content}>\n                <List className={classes.padding}>\n                    <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                        <ListItemAvatar>\n                            <Skeleton variant=\"rect\" width={44} height={44} />\n                        </ListItemAvatar>\n                        <ListItemText\n                            className={classes.padding}\n                            primary={<Skeleton variant=\"rect\" height={20} />}\n                            secondary={<Skeleton variant=\"text\" />}\n                        />\n                    </ListItem>\n                </List>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalIncomeCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport TableChartOutlinedIcon from '@material-ui/icons/TableChartOutlined';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        backgroundColor: theme.palette.primary.dark,\n        color: theme.palette.primary.light,\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.primary[200] + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.primary[200] + ' -14.02%, rgba(144, 202, 249, 0) 77.58%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.primary[800],\n        color: '#fff'\n    },\n    primary: {\n        color: '#fff'\n    },\n    secondary: {\n        color: theme.palette.primary.light,\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME DARK CARD ||-----------------------//\n\nconst TotalIncomeDarkCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard border={false} className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <TableChartOutlinedIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.padding}\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                primary={\n                                    <Typography variant=\"h4\" className={classes.primary}>\n                                        $203k\n                                    </Typography>\n                                }\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeDarkCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeDarkCard;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\n\n// project imports\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport TotalIncomeCard from './../../../ui-component/cards/Skeleton/TotalIncomeCard';\n\n// assets\nimport StorefrontTwoToneIcon from '@material-ui/icons/StorefrontTwoTone';\n\n// style constant\nconst useStyles = makeStyles((theme) => ({\n    card: {\n        overflow: 'hidden',\n        position: 'relative',\n        '&:after': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(210.04deg, ' + theme.palette.warning.dark + ' -50.94%, rgba(144, 202, 249, 0) 83.49%)',\n            borderRadius: '50%',\n            top: '-30px',\n            right: '-180px'\n        },\n        '&:before': {\n            content: '\"\"',\n            position: 'absolute',\n            width: '210px',\n            height: '210px',\n            background: 'linear-gradient(140.9deg, ' + theme.palette.warning.dark + ' -14.02%, rgba(144, 202, 249, 0) 70.50%)',\n            borderRadius: '50%',\n            top: '-160px',\n            right: '-130px'\n        }\n    },\n    content: {\n        padding: '16px !important'\n    },\n    avatar: {\n        ...theme.typography.commonAvatar,\n        ...theme.typography.largeAvatar,\n        backgroundColor: theme.palette.warning.light,\n        color: theme.palette.warning.dark\n    },\n    secondary: {\n        color: theme.palette.grey[500],\n        marginTop: '5px'\n    },\n    padding: {\n        paddingTop: 0,\n        paddingBottom: 0\n    }\n}));\n\n//-----------------------|| DASHBOARD - TOTAL INCOME LIGHT CARD ||-----------------------//\n\nconst TotalIncomeLightCard = ({ isLoading }) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <TotalIncomeCard />\n            ) : (\n                <MainCard className={classes.card} contentClass={classes.content}>\n                    <List className={classes.padding}>\n                        <ListItem alignItems=\"center\" disableGutters className={classes.padding}>\n                            <ListItemAvatar>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>\n                                    <StorefrontTwoToneIcon fontSize=\"inherit\" />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                sx={{\n                                    mt: 0.45,\n                                    mb: 0.45\n                                }}\n                                className={classes.padding}\n                                primary={<Typography variant=\"h4\">$203k</Typography>}\n                                secondary={\n                                    <Typography variant=\"subtitle2\" className={classes.secondary}>\n                                        Total Income\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                    </List>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalIncomeLightCard.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalIncomeLightCard;\n","import React from 'react';\n\n// material-ui\nimport { Card, CardContent, Grid } from '@material-ui/core';\nimport Skeleton from '@material-ui/core/Skeleton';\n\n// project imports\nimport { gridSpacing } from '../../../store/constant';\n\n//-----------------------|| SKELETON TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = () => {\n    return (\n        <Card>\n            <CardContent>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12}>\n                        <Grid container alignItems=\"center\" justifyContent=\"space-between\" spacing={gridSpacing}>\n                            <Grid item xs zeroMinWidth>\n                                <Grid container spacing={1}>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"text\" />\n                                    </Grid>\n                                    <Grid item xs={12}>\n                                        <Skeleton variant=\"rect\" height={20} />\n                                    </Grid>\n                                </Grid>\n                            </Grid>\n                            <Grid item>\n                                <Skeleton variant=\"rect\" height={50} width={80} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Skeleton variant=\"rect\" height={530} />\n                    </Grid>\n                </Grid>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default TotalGrowthBarChart;\n","//-----------------------|| DASHBOARD - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst chartData = {\n    height: 480,\n    type: 'bar',\n    options: {\n        chart: {\n            id: 'bar-chart',\n            stacked: true,\n            toolbar: {\n                show: true\n            },\n            zoom: {\n                enabled: true\n            }\n        },\n        responsive: [\n            {\n                breakpoint: 480,\n                options: {\n                    legend: {\n                        position: 'bottom',\n                        offsetX: -10,\n                        offsetY: 0\n                    }\n                }\n            }\n        ],\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '50%'\n            }\n        },\n        xaxis: {\n            type: 'category',\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\n        },\n        legend: {\n            show: true,\n            fontSize: '14px',\n            fontFamily: `'Roboto', sans-serif`,\n            position: 'bottom',\n            offsetX: 20,\n            labels: {\n                useSeriesColors: false\n            },\n            markers: {\n                width: 16,\n                height: 16,\n                radius: 5\n            },\n            itemMargin: {\n                horizontal: 15,\n                vertical: 8\n            }\n        },\n        fill: {\n            type: 'solid'\n        },\n        dataLabels: {\n            enabled: false\n        },\n        grid: {\n            show: true\n        }\n    },\n    series: [\n        {\n            name: 'Investment',\n            data: [35, 125, 35, 35, 35, 80, 35, 20, 35, 45, 15, 75]\n        },\n        {\n            name: 'Loss',\n            data: [35, 15, 15, 35, 65, 40, 80, 25, 15, 85, 25, 75]\n        },\n        {\n            name: 'Profit',\n            data: [35, 145, 35, 35, 20, 105, 100, 10, 65, 45, 30, 10]\n        },\n        {\n            name: 'Maintenance',\n            data: [0, 0, 75, 0, 0, 115, 0, 0, 0, 0, 150, 0]\n        }\n    ]\n};\nexport default chartData;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\n// material-ui\nimport { Grid, MenuItem, TextField, Typography, useTheme } from '@material-ui/core';\n\n// third-party\nimport ApexCharts from 'apexcharts';\nimport Chart from 'react-apexcharts';\n\n// project imports\nimport SkeletonTotalGrowthBarChart from './../../../ui-component/cards/Skeleton/TotalGrowthBarChart';\nimport MainCard from './../../../ui-component/cards/MainCard';\nimport { gridSpacing } from './../../../store/constant';\n\n// chart data\nimport chartData from './chart-data/total-growth-bar-chart';\n\nconst status = [\n    {\n        value: 'today',\n        label: 'Today'\n    },\n    {\n        value: 'month',\n        label: 'This Month'\n    },\n    {\n        value: 'year',\n        label: 'This Year'\n    }\n];\n\n//-----------------------|| DASHBOARD DEFAULT - TOTAL GROWTH BAR CHART ||-----------------------//\n\nconst TotalGrowthBarChart = ({ isLoading }) => {\n    const [value, setValue] = React.useState('today');\n    const theme = useTheme();\n\n    const primary = theme.palette.text.primary;\n    const grey200 = theme.palette.grey[200];\n\n    const primary200 = theme.palette.primary[200];\n    const primaryDark = theme.palette.primary.dark;\n    const secondaryMain = theme.palette.secondary.main;\n    const secondaryLight = theme.palette.secondary.light;\n    const grey500 = theme.palette.grey[500];\n\n    React.useEffect(() => {\n        const newChartData = {\n            ...chartData.options,\n            colors: [primary200, primaryDark, secondaryMain, secondaryLight],\n            xaxis: {\n                labels: {\n                    style: {\n                        colors: [primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary, primary]\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: [primary]\n                    }\n                }\n            },\n            grid: {\n                borderColor: grey200\n            },\n            tooltip: {\n                theme: 'light'\n            },\n            legend: {\n                labels: {\n                    colors: grey500\n                }\n            }\n        };\n\n        // do not load chart when loading\n        if (!isLoading) {\n            ApexCharts.exec(`bar-chart`, 'updateOptions', newChartData);\n        }\n    }, [primary200, primaryDark, secondaryMain, secondaryLight, primary, grey200, isLoading, grey500]);\n\n    return (\n        <React.Fragment>\n            {isLoading ? (\n                <SkeletonTotalGrowthBarChart />\n            ) : (\n                <MainCard>\n                    <Grid container spacing={gridSpacing}>\n                        <Grid item xs={12}>\n                            <Grid container alignItems=\"center\" justifyContent=\"space-between\">\n                                <Grid item>\n                                    <Grid container direction=\"column\" spacing={1}>\n                                        <Grid item>\n                                            <Typography variant=\"subtitle2\">Total Growth</Typography>\n                                        </Grid>\n                                        <Grid item>\n                                            <Typography variant=\"h3\">$2,324.00</Typography>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n                                <Grid item>\n                                    <TextField\n                                        id=\"standard-select-currency\"\n                                        select\n                                        value={value}\n                                        onChange={(e) => setValue(e.target.value)}\n                                    >\n                                        {status.map((option) => (\n                                            <MenuItem key={option.value} value={option.value}>\n                                                {option.label}\n                                            </MenuItem>\n                                        ))}\n                                    </TextField>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Chart {...chartData} />\n                        </Grid>\n                    </Grid>\n                </MainCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nTotalGrowthBarChart.propTypes = {\n    isLoading: PropTypes.bool\n};\n\nexport default TotalGrowthBarChart;\n","import React, { useEffect, useState } from 'react';\n\n// material-ui\nimport { Grid } from '@material-ui/core';\n\n// project imports\nimport EarningCard from './EarningCard';\nimport PopularCard from './PopularCard';\nimport TotalOrderLineChartCard from './TotalOrderLineChartCard';\nimport TotalIncomeDarkCard from './TotalIncomeDarkCard';\nimport TotalIncomeLightCard from './TotalIncomeLightCard';\nimport TotalGrowthBarChart from './TotalGrowthBarChart';\nimport { gridSpacing } from './../../../store/constant';\n\n//-----------------------|| DEFAULT DASHBOARD ||-----------------------//\n\nconst Dashboard = () => {\n    const [isLoading, setLoading] = useState(true);\n    useEffect(() => {\n        setLoading(false);\n    }, []);\n\n    return (\n        <Grid container spacing={gridSpacing}>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <EarningCard isLoading={isLoading} />\n                    </Grid>\n                    <Grid item lg={4} md={6} sm={6} xs={12}>\n                        <TotalOrderLineChartCard isLoading={isLoading} />\n                    </Grid>\n                    <Grid item lg={4} md={12} sm={12} xs={12}>\n                        <Grid container spacing={gridSpacing}>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeDarkCard isLoading={isLoading} />\n                            </Grid>\n                            <Grid item sm={6} xs={12} md={6} lg={12}>\n                                <TotalIncomeLightCard isLoading={isLoading} />\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={12}>\n                <Grid container spacing={gridSpacing}>\n                    <Grid item xs={12} md={8}>\n                        <TotalGrowthBarChart isLoading={isLoading} />\n                    </Grid>\n                    <Grid item xs={12} md={4}>\n                        <PopularCard isLoading={isLoading} />\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Dashboard;\n"],"sourceRoot":""}